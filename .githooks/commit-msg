#!/usr/bin/env python
import sys
import re
from enum import Enum




def check_commit_msg_pattern():
    # The argument passed to the "commit-msg" hook is the path to a
    # temporary file that contains the commit message written by the
    # developer.
    msg_temp_file = sys.argv[1]

    with open(msg_temp_file, "r") as f_msg:
        lines = f_msg.readlines()

    # Remove the comment lines in the commit message.
    lines = [l for l in lines if not l.strip().startswith("#")]

    has_warning = False
    if len(lines) > 1:
        message = "Commit message should be one line"
        print(message)
        exit(-1)

    
    if len(lines[0]) > 100:
        has_warning = True
        message = (
            "There should be less then 100 characters"
        )

        print(message)
        exit(-1)

    
    if lines[0].find(":") == -1:
        has_warning = True
        message = (
            "Commit message must comform to the following format: 'SUBJECT: COMMENT' "
        )
        print(message)
    
        exit(-1)

    
    separator = lines[0].find(": ")
    if separator < 1:
        message = (
            "Commit message must comform to the following format: 'SUBJECT: COMMENT' "
        )
        print(message)
        exit(-1)

    splitted = lines[0].split(": ")
    text = splitted[0].strip()
    result = re.search("feat|fix|chore|refactor",text)
    if result == None:
        message = "Commit subject must be one of the followings...feat, fix, chore, refactor"
        print(message)
        exit(-1)

    

if __name__ == "__main__":
    check_commit_msg_pattern()